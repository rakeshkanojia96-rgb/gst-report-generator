name: Firebase Deploy

on:
  workflow_dispatch:
    inputs:
      target:
        description: "What to deploy (hosting | rules | both)"
        required: true
        default: "both"
      channel:
        description: "Optional preview channel id (e.g. v1-0-0). If set, deploys to preview channel instead of production."
        required: false
        default: ""
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: gst-report-generator-29987
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Show Firebase version
        run: firebase --version

      - name: Deploy Firestore Rules (if requested)
        if: github.event_name == 'workflow_dispatch' && (github.event.inputs.target == 'rules' || github.event.inputs.target == 'both') || startsWith(github.ref, 'refs/tags/v')
        run: |
          firebase deploy --only firestore:rules --project $PROJECT_ID
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy Hosting (production or preview)
        if: github.event_name == 'workflow_dispatch' && (github.event.inputs.target == 'hosting' || github.event.inputs.target == 'both') || startsWith(github.ref, 'refs/tags/v')
        run: |
          if [ -n "${{ github.event.inputs.channel }}" ]; then
            echo "Deploying to preview channel: ${{ github.event.inputs.channel }}"
            firebase hosting:channel:deploy "${{ github.event.inputs.channel }}" --project $PROJECT_ID --expires 30d
          else
            echo "Deploying to production (live)"
            firebase deploy --only hosting --project $PROJECT_ID
          fi
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
